{"ast":null,"code":"var _jsxFileName = \"/Users/jihyunlee/Desktop/\\u110F\\u1165\\u1109\\u1165AI(\\u110B\\u1167\\u11BC\\u110B\\u1165\\u110B\\u1175\\u11AF\\u1100\\u1175\\u1107\\u1165\\u110C\\u1165\\u11AB2)/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // 모든 Hook을 최상단에서 호출\n  const [user, setUser] = useState(null);\n\n  // 한국 시간 기준으로 오늘 날짜 계산\n  const getTodayDate = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n  const [selectedDate, setSelectedDate] = useState(getTodayDate());\n  const [mood, setMood] = useState('');\n  const [customMood, setCustomMood] = useState('');\n  const [diaryEntry, setDiaryEntry] = useState('');\n  const [feedback, setFeedback] = useState([]);\n  const [diaryEntries, setDiaryEntries] = useState({});\n  const [showCustomMoodInput, setShowCustomMoodInput] = useState(false);\n  const [learningSummary, setLearningSummary] = useState('');\n\n  // 로그인 상태 확인\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n  }, []);\n\n  // Load saved entries from localStorage\n  useEffect(() => {\n    if (user) {\n      // 로그인된 상태에서만 실행\n      const savedEntries = localStorage.getItem('diaryEntries');\n      if (savedEntries) {\n        var _parsedEntries$select;\n        const parsedEntries = JSON.parse(savedEntries);\n        setDiaryEntries(parsedEntries);\n        // 현재 선택된 날짜의 데이터만 로드\n        if ((_parsedEntries$select = parsedEntries[selectedDate]) !== null && _parsedEntries$select !== void 0 && _parsedEntries$select.learningSummary) {\n          setLearningSummary(parsedEntries[selectedDate].learningSummary);\n        }\n      }\n    }\n  }, [user]); // selectedDate 의존성 제거\n\n  // 로그인 핸들러\n  const handleLogin = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  // 로그아웃 핸들러\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('diaryEntries');\n  };\n\n  // 로그인 상태가 아니면 로그인 화면 표시\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  const moods = [{\n    name: 'Happy',\n    emoji: '😊'\n  }, {\n    name: 'Sad',\n    emoji: '😢'\n  }, {\n    name: 'Excited',\n    emoji: '🎉'\n  }, {\n    name: 'Anxious',\n    emoji: '😰'\n  }, {\n    name: 'Calm',\n    emoji: '🧘'\n  }, {\n    name: 'Stressed',\n    emoji: '😫'\n  }, {\n    name: 'Grateful',\n    emoji: '🙏'\n  }, {\n    name: 'Tired',\n    emoji: '😴'\n  }, {\n    name: 'Energetic',\n    emoji: '⚡'\n  }, {\n    name: 'Hopeful',\n    emoji: '🌟'\n  }, {\n    name: 'Frustrated',\n    emoji: '😤'\n  }, {\n    name: 'Content',\n    emoji: '😌'\n  }, {\n    name: 'Lonely',\n    emoji: '😔'\n  }, {\n    name: 'Inspired',\n    emoji: '💡'\n  }, {\n    name: 'Bored',\n    emoji: '🥱'\n  }, {\n    name: 'Confident',\n    emoji: '💪'\n  }, {\n    name: 'Nervous',\n    emoji: '😬'\n  }, {\n    name: 'Peaceful',\n    emoji: '🕊️'\n  }, {\n    name: 'Overwhelmed',\n    emoji: '😵'\n  }, {\n    name: 'Curious',\n    emoji: '🔍'\n  }, {\n    name: 'Relieved',\n    emoji: '😅'\n  }, {\n    name: 'Disappointed',\n    emoji: '😞'\n  }, {\n    name: 'Proud',\n    emoji: '🏆'\n  }, {\n    name: 'Ashamed',\n    emoji: '😳'\n  }, {\n    name: 'Optimistic',\n    emoji: '☀️'\n  }, {\n    name: 'Pessimistic',\n    emoji: '🌧️'\n  }, {\n    name: 'Motivated',\n    emoji: '🚀'\n  }, {\n    name: 'Drained',\n    emoji: '🔋'\n  }, {\n    name: 'Playful',\n    emoji: '🎈'\n  }, {\n    name: 'Serious',\n    emoji: '👔'\n  }];\n\n  // Save entries to localStorage\n  const saveEntries = entries => {\n    setDiaryEntries(entries);\n    try {\n      localStorage.setItem('diaryEntries', JSON.stringify(entries));\n    } catch (e) {\n      console.warn('Could not save to localStorage', e);\n    }\n  };\n  const detectKoreanWords = text => {\n    const koreanRegex = /[\\uAC00-\\uD7A3]/;\n    const words = text.split(/\\s+/);\n    const koreanWords = [];\n    words.forEach(word => {\n      const cleanWord = word.replace(/[.,!?;:()\"'-]/g, '');\n      if (koreanRegex.test(cleanWord) && cleanWord.length > 1) {\n        koreanWords.push(cleanWord);\n      }\n    });\n    return koreanWords;\n  };\n  const suggestEnglishEquivalent = koreanWord => {\n    const dictionary = {\n      '평영': 'breaststroke',\n      '배영': 'backstroke',\n      '자유형': 'freestyle',\n      '접영': 'butterfly stroke',\n      '밥': 'meal',\n      '점심': 'lunch',\n      '아침': 'breakfast',\n      '저녁': 'dinner',\n      '학교': 'school',\n      '회사': 'office',\n      '친구': 'friend',\n      '가족': 'family',\n      '엄마': 'mom',\n      '아빠': 'dad',\n      '형': 'older brother',\n      '누나': 'older sister',\n      '오빠': 'older brother (female speaker)',\n      '언니': 'older sister (female speaker)',\n      '선생님': 'teacher',\n      '학생': 'student',\n      '운동': 'exercise',\n      '공부': 'study',\n      '놀이': 'play',\n      '여행': 'trip',\n      '휴가': 'vacation',\n      '생일': 'birthday',\n      '결혼': 'marriage',\n      '이별': 'breakup',\n      '사랑': 'love',\n      '기쁨': 'joy',\n      '슬픔': 'sadness',\n      '화남': 'anger',\n      '두려움': 'fear'\n    };\n    return dictionary[koreanWord] || null;\n  };\n  const analyzeSentence = (sentence, index) => {\n    const feedbackItems = [];\n    let processedSentence = sentence.trim();\n    if (!processedSentence) return feedbackItems;\n    const originalSentence = processedSentence;\n    let hasChanges = false;\n    let reasons = []; // 배열로 변경하여 각 오류별로 구분\n\n    // 1. Check for Korean words in English text\n    const koreanWords = detectKoreanWords(processedSentence);\n    if (koreanWords.length > 0) {\n      koreanWords.forEach(koreanWord => {\n        const englishEquivalent = suggestEnglishEquivalent(koreanWord);\n        if (englishEquivalent) {\n          processedSentence = processedSentence.replace(koreanWord, englishEquivalent);\n          hasChanges = true;\n          reasons.push(`• '${koreanWord}'을(를) '${englishEquivalent}'로 바꾸세요.\\n  영어 일기에서는 영어 표현을 사용하는 것이 좋아요.`);\n        } else {\n          reasons.push(`• '${koreanWord}'은(는) 한국어 단어예요.\\n  영어 표현을 찾아서 사용해보세요.`);\n        }\n      });\n    }\n\n    // 2. Fix \"to do\" grammar errors (to did, to went, etc.)\n    const toInfinitiveErrors = {\n      'to did': 'to do',\n      'to went': 'to go',\n      'to saw': 'to see',\n      'to ate': 'to eat',\n      'to drank': 'to drink',\n      'to wrote': 'to write',\n      'to slept': 'to sleep',\n      'to felt': 'to feel',\n      'to bought': 'to buy',\n      'to brought': 'to bring',\n      'to thought': 'to think',\n      'to caught': 'to catch',\n      'to knew': 'to know',\n      'to took': 'to take',\n      'to came': 'to come'\n    };\n    Object.entries(toInfinitiveErrors).forEach(([incorrect, correct]) => {\n      const regex = new RegExp(`\\\\b${incorrect}\\\\b`, 'gi');\n      if (regex.test(processedSentence)) {\n        processedSentence = processedSentence.replace(regex, correct);\n        hasChanges = true;\n        reasons.push(`• '${incorrect}' → '${correct}': 'to' 뒤에는 동사의 원형을 사용해야 해요.\\n  예: to do, to go, to see, to eat`);\n      }\n    });\n\n    // 3. Fix common verb tense errors in context\n    const contextBasedTenseFixes = {\n      'I am go': 'I am going',\n      'I am went': 'I went',\n      'I am do': 'I am doing',\n      'I am did': 'I did',\n      'I am eat': 'I am eating',\n      'I am ate': 'I ate',\n      'I am see': 'I am seeing',\n      'I am saw': 'I saw',\n      'I am have': 'I have',\n      'I am had': 'I had',\n      'I am get': 'I am getting',\n      'I am got': 'I got',\n      'I am make': 'I am making',\n      'I am made': 'I made',\n      'I am take': 'I am taking',\n      'I am took': 'I took',\n      'I am come': 'I am coming',\n      'I am came': 'I came'\n    };\n    Object.entries(contextBasedTenseFixes).forEach(([incorrect, correct]) => {\n      const regex = new RegExp(`\\\\b${incorrect}\\\\b`, 'gi');\n      if (regex.test(processedSentence)) {\n        processedSentence = processedSentence.replace(regex, correct);\n        hasChanges = true;\n        reasons.push(`• '${incorrect}' → '${correct}': 'am' 뒤에는 동사의 -ing 형태나 과거형을 사용해야 해요.\\n  현재진행형: I am going, I am eating\\n  과거형: I went, I ate`);\n      }\n    });\n\n    // 4. Check if sentence starts with lowercase letter\n    if (processedSentence.length > 0 && processedSentence[0] === processedSentence[0].toLowerCase() && /^[a-z]/.test(processedSentence)) {\n      processedSentence = processedSentence.charAt(0).toUpperCase() + processedSentence.slice(1);\n      hasChanges = true;\n      reasons.push(`• 문장은 대문자로 시작해야 해요.\\n  예: \"i went to school\" → \"I went to school\"`);\n    }\n\n    // 5. Check if sentence starts with conjunction\n    const conjunctions = ['and', 'but', 'or', 'so', 'because', 'although', 'though', 'since', 'while'];\n    const firstWord = processedSentence.split(' ')[0].toLowerCase().replace(/[.,!?;:]/g, '');\n    if (conjunctions.includes(firstWord)) {\n      const words = processedSentence.split(' ');\n      words.shift();\n      processedSentence = words.join(' ');\n      if (processedSentence.length > 0) {\n        processedSentence = processedSentence.charAt(0).toUpperCase() + processedSentence.slice(1);\n      }\n      hasChanges = true;\n      reasons.push(`• 문장을 접속사('${firstWord}')로 시작하지 마세요.\\n  접속사는 두 문장을 연결할 때 사용해요.\\n  예: \"I was tired. So I went to bed early.\"`);\n    }\n\n    // 6. Check for comma splice\n    if (processedSentence.includes(',') && (processedSentence.includes(' I ') || processedSentence.includes(' He ') || processedSentence.includes(' She ') || processedSentence.includes(' It ') || processedSentence.includes(' We ') || processedSentence.includes(' They '))) {\n      const commaIndex = processedSentence.indexOf(',');\n      const afterComma = processedSentence.substring(commaIndex + 1).trim();\n      if (afterComma.length > 0 && /^[A-Z][a-z]/.test(afterComma)) {\n        processedSentence = processedSentence.substring(0, commaIndex) + '. ' + afterComma.charAt(0).toUpperCase() + afterComma.slice(1);\n        hasChanges = true;\n        reasons.push(`• 쉼표로 두 개의 완전한 문장을 연결하지 마세요.\\n  마침표로 나누거나 접속사를 사용하세요.\\n  예: \"I was tired, I went to bed\" → \"I was tired. I went to bed\"`);\n      }\n    }\n\n    // 7. Check for missing space after punctuation\n    if (/[.,!?;:][a-zA-Z]/.test(processedSentence)) {\n      processedSentence = processedSentence.replace(/([.,!?;:])([a-zA-Z])/g, '$1 $2');\n      hasChanges = true;\n      reasons.push(`• 구두점 뒤에는 공백을 넣어야 해요.\\n  예: \"I went to school.It was fun.\" → \"I went to school. It was fun.\"`);\n    }\n\n    // 8. Check for inappropriate use of present tense for past events\n    const irregularPastForms = {\n      'go': 'went',\n      'see': 'saw',\n      'do': 'did',\n      'have': 'had',\n      'get': 'got',\n      'make': 'made',\n      'say': 'said',\n      'know': 'knew',\n      'take': 'took',\n      'come': 'came',\n      'eat': 'ate',\n      'drink': 'drank',\n      'write': 'wrote',\n      'read': 'read',\n      'sleep': 'slept',\n      'feel': 'felt',\n      'buy': 'bought',\n      'bring': 'brought',\n      'think': 'thought',\n      'catch': 'caught'\n    };\n    Object.entries(irregularPastForms).forEach(([present, past]) => {\n      const regex = new RegExp(`\\\\b${present}\\\\b`, 'gi');\n      if (regex.test(processedSentence) && !processedSentence.match(/\\b(am|is|are|was|were|been|being)\\b/gi)) {\n        const timeIndicators = ['today', 'yesterday', 'morning', 'afternoon', 'evening', 'night', 'last', 'ago'];\n        const hasTimeIndicator = timeIndicators.some(indicator => processedSentence.toLowerCase().includes(indicator));\n        if (hasTimeIndicator || !processedSentence.match(/\\b(now|currently|right now|these days)\\b/gi)) {\n          processedSentence = processedSentence.replace(regex, past);\n          hasChanges = true;\n          reasons.push(`• 과거 일을 서술할 때는 '${present}' → '${past}'를 사용하세요.\\n  일기에서는 일반적으로 과거형을 사용해요.\\n  예: \"I go to school\" → \"I went to school\"`);\n        }\n      }\n    });\n\n    // 9. Check for incorrect adjective usage with feelings\n    const feelingAdjectives = {\n      'frustrating': 'frustrated',\n      'exciting': 'excited',\n      'boring': 'bored',\n      'tiring': 'tired',\n      'surprising': 'surprised',\n      'interesting': 'interested',\n      'confusing': 'confused',\n      'amazing': 'amazed',\n      'shocking': 'shocked',\n      'disappointing': 'disappointed',\n      'satisfying': 'satisfied',\n      'worrying': 'worried',\n      'terrifying': 'terrified',\n      'pleasing': 'pleased',\n      'annoying': 'annoyed'\n    };\n    Object.entries(feelingAdjectives).forEach(([ingForm, edForm]) => {\n      const regex = new RegExp(`\\\\bI\\\\s+(am|was|feel|felt)\\\\s+${ingForm}\\\\b`, 'gi');\n      if (regex.test(processedSentence)) {\n        processedSentence = processedSentence.replace(regex, match => {\n          return match.replace(new RegExp(`${ingForm}`, 'i'), edForm);\n        });\n        hasChanges = true;\n        reasons.push(`• 기분 표현에는 '${ingForm}' → '${edForm}'를 사용하세요.\\n  -ing: 어떤 것이 그 기분을 주는지 (The movie was exciting)\\n  -ed: 당신이 그 기분을 느낄 때 (I was excited)`);\n      }\n    });\n\n    // 10. Replace informal expressions with more formal ones\n    const informalToFormal = {\n      'a lot': 'significantly',\n      'kind of': 'somewhat',\n      'sort of': 'rather',\n      'gonna': 'going to',\n      'wanna': 'want to',\n      'gotta': 'have to',\n      'pretty': 'quite',\n      'really': 'very',\n      'very very': 'extremely',\n      'super': 'extremely',\n      'awesome': 'excellent',\n      'cool': 'great',\n      'bad': 'poor',\n      'stuff': 'things',\n      'get': 'obtain or become',\n      'make': 'create or cause'\n    };\n    Object.entries(informalToFormal).forEach(([informal, formal]) => {\n      const regex = new RegExp(`\\\\b${informal}\\\\b`, 'gi');\n      if (regex.test(processedSentence)) {\n        processedSentence = processedSentence.replace(regex, formal);\n        hasChanges = true;\n        reasons.push(`• '${informal}' → '${formal}': 더 정교한 표현을 사용하세요.\\n  비형식적 표현보다 형식적인 표현이 일기에 적합해요.`);\n      }\n    });\n\n    // 11. Improve vague expressions (moved to end to avoid conflicts)\n    if (processedSentence.toLowerCase().includes('thing') || processedSentence.toLowerCase().includes('things')) {\n      processedSentence = processedSentence.replace(/\\bthing\\b/gi, 'item or activity');\n      processedSentence = processedSentence.replace(/\\bthings\\b/gi, 'various activities or items');\n      hasChanges = true;\n      reasons.push(`• 'thing/things' → 더 구체적인 표현을 사용하세요.\\n  모호한 표현보다 구체적인 설명이 좋아요.\\n  예: \"I did many things\" → \"I did various activities\"`);\n    }\n\n    // 12. Fix run-on sentences\n    const longSentenceWords = processedSentence.split(' ');\n    if (longSentenceWords.length > 25 && !processedSentence.includes('.')) {\n      const breakPoint = Math.floor(longSentenceWords.length * 0.6);\n      const firstPart = longSentenceWords.slice(0, breakPoint).join(' ');\n      const secondPart = longSentenceWords.slice(breakPoint).join(' ');\n      processedSentence = `${firstPart}. ${secondPart.charAt(0).toUpperCase() + secondPart.slice(1)}`;\n      hasChanges = true;\n      reasons.push(`• 긴 문장을 두 개로 나누세요.\\n  15-20단어를 넘는 문장은 피하는 것이 좋아요.\\n  문장을 나누면 더 명확하게 표현할 수 있어요.`);\n    }\n\n    // 13. Check for common article errors\n    const commonNouns = ['school', 'work', 'home', 'bed', 'hospital', 'church', 'college', 'university'];\n    commonNouns.forEach(noun => {\n      const regex = new RegExp(`\\\\bthe\\\\s+${noun}\\\\b`, 'gi');\n      if (regex.test(processedSentence) && !processedSentence.match(/\\b(in|at|to|from) the\\b/gi)) {\n        const noArticleContexts = ['go to', 'be at', 'come from', 'arrive at'];\n        const hasNoArticleContext = noArticleContexts.some(context => processedSentence.toLowerCase().includes(context));\n        if (hasNoArticleContext) {\n          processedSentence = processedSentence.replace(regex, noun);\n          hasChanges = true;\n          reasons.push(`• 'the ${noun}' → '${noun}': 일부 장소명사는 'the' 없이 사용해요.\\n  예: go to school, be at work, go home`);\n        }\n      }\n    });\n\n    // 14. Check for missing articles before singular countable nouns\n    const countableNouns = ['book', 'movie', 'car', 'house', 'friend', 'teacher', 'student', 'dog', 'cat', 'phone', 'computer', 'table', 'chair', 'window', 'door'];\n    countableNouns.forEach(noun => {\n      const regex = new RegExp(`\\\\b${noun}\\\\b`, 'gi');\n      if (regex.test(processedSentence)) {\n        const beforeNoun = processedSentence.substring(0, processedSentence.toLowerCase().indexOf(noun.toLowerCase()));\n        const afterNoun = processedSentence.substring(processedSentence.toLowerCase().indexOf(noun.toLowerCase()) + noun.length);\n\n        // Check if there's already an article before the noun\n        const hasArticle = /\\b(a|an|the|my|your|his|her|its|our|their)\\s+$/i.test(beforeNoun);\n        const isPlural = /\\b\\w+s\\b/i.test(processedSentence);\n        if (!hasArticle && !isPlural && !beforeNoun.match(/\\b(in|at|on|to|from|with|by|for|of)\\s+$/i)) {\n          const vowelSound = /^[aeiou]/i.test(noun);\n          const article = vowelSound ? 'an' : 'a';\n          processedSentence = processedSentence.replace(regex, `${article} ${noun}`);\n          hasChanges = true;\n          reasons.push(`• '${noun}' → '${article} ${noun}': 단수 가산명사 앞에는 관사를 사용하세요.\\n  예: a book, an apple, the car`);\n        }\n      }\n    });\n\n    // 15. Check for double negatives\n    if (processedSentence.toLowerCase().includes('not') && (processedSentence.toLowerCase().includes('no') || processedSentence.toLowerCase().includes('never') || processedSentence.toLowerCase().includes('nothing') || processedSentence.toLowerCase().includes('nobody'))) {\n      processedSentence = processedSentence.replace(/\\bnot\\b/gi, '');\n      processedSentence = processedSentence.replace(/\\s+/g, ' ').trim();\n      hasChanges = true;\n      reasons.push(`• 이중 부정을 피하세요.\\n  'not'과 'no/never' 등을 함께 사용하지 마세요.\\n  예: \"I don't have no money\" → \"I have no money\"`);\n    }\n\n    // 16. If we've made changes, add feedback item\n    if (hasChanges) {\n      feedbackItems.push({\n        original: originalSentence,\n        suggestion: processedSentence,\n        reason: reasons.join('\\n\\n') // 각 피드백 사이에 빈 줄 추가\n      });\n    }\n    // If no changes but sentence is reasonably long, provide constructive feedback\n    else if (originalSentence.length > 15) {\n      feedbackItems.push({\n        original: originalSentence,\n        suggestion: originalSentence,\n        reason: \"• 문장이 아주 잘 작성되었어요!\\n\\n• 더 나은 표현을 위해 다음을 시도해보세요:\\n  - 더 정교한 어휘 사용\\n  - 다양한 문장 구조 사용\\n  - 구체적인 설명 추가\"\n      });\n    }\n    return feedbackItems;\n  };\n  const generateFeedback = text => {\n    if (!text.trim()) return [];\n    const sentences = text.split(/[.!?]+/).filter(sentence => sentence.trim().length > 0);\n    const allFeedback = [];\n    sentences.forEach((sentence, index) => {\n      const feedback = analyzeSentence(sentence, index);\n      allFeedback.push(...feedback);\n    });\n\n    // Add contextual suggestions based on the overall text\n    if (allFeedback.length === 0 && text.length > 50) {\n      const contextualSuggestions = generateContextualSuggestions(text);\n      allFeedback.push(...contextualSuggestions);\n    }\n    return allFeedback.slice(0, 5); // Limit to 5 feedback items\n  };\n  const generateContextualSuggestions = text => {\n    const suggestions = [];\n    const lowerText = text.toLowerCase();\n\n    // Check for repetitive sentence structures\n    const sentences = text.split(/[.!?]+/).filter(s => s.trim().length > 10);\n    const sentenceStarts = sentences.map(s => s.trim().split(' ')[0].toLowerCase());\n    const startCounts = {};\n    sentenceStarts.forEach(start => {\n      startCounts[start] = (startCounts[start] || 0) + 1;\n    });\n    const repetitiveStart = Object.entries(startCounts).find(([word, count]) => count > 2);\n    if (repetitiveStart) {\n      suggestions.push({\n        original: `문장들이 '${repetitiveStart[0]}'로 시작하는 경우가 많아요.`,\n        suggestion: \"다양한 문장 시작을 시도해보세요: 'I', 'The', 'It', 'There', 'This', 'That' 등을 활용하면 더 흥미로운 글이 됩니다.\",\n        reason: \"• 같은 단어로 문장을 시작하면 글의 흐름이 단조로워져요.\\n• 다양한 문장 구조를 사용하면 더 자연스럽고 읽기 쉬운 글이 됩니다.\"\n      });\n    }\n\n    // Check for vocabulary variety\n    const words = lowerText.split(/\\s+/).filter(word => word.length > 3);\n    const wordCounts = {};\n    words.forEach(word => {\n      wordCounts[word] = (wordCounts[word] || 0) + 1;\n    });\n    const overusedWords = Object.entries(wordCounts).filter(([word, count]) => count > 3);\n    if (overusedWords.length > 0) {\n      const word = overusedWords[0][0];\n      const alternatives = getWordAlternatives(word);\n      if (alternatives.length > 0) {\n        suggestions.push({\n          original: `'${word}' 단어를 여러 번 사용했어요.`,\n          suggestion: `다른 표현을 시도해보세요: ${alternatives.join(', ')}`,\n          reason: \"• 같은 단어를 반복 사용하면 글의 표현력이 떨어져요.\\n• 다양한 동의어를 사용하면 더 풍부한 표현이 가능합니다.\"\n        });\n      }\n    }\n\n    // Check for text length and structure\n    if (text.length < 100) {\n      suggestions.push({\n        original: \"일기가 조금 짧아요.\",\n        suggestion: \"더 자세한 설명을 추가해보세요: 언제, 어디서, 누구와, 무엇을, 어떻게, 왜에 대한 정보를 포함하면 더 풍부한 일기가 됩니다.\",\n        reason: \"• 짧은 일기보다는 구체적인 세부사항을 포함한 긴 일기가 영어 학습에 더 도움이 됩니다.\\n• 5W1H(언제, 어디서, 누구와, 무엇을, 어떻게, 왜)를 고려해서 작성해보세요.\"\n      });\n    }\n    return suggestions;\n  };\n  const getWordAlternatives = word => {\n    const alternatives = {\n      'good': ['excellent', 'great', 'wonderful', 'fantastic', 'amazing', 'outstanding'],\n      'bad': ['terrible', 'awful', 'horrible', 'dreadful', 'poor', 'disappointing'],\n      'big': ['large', 'huge', 'enormous', 'massive', 'gigantic', 'substantial'],\n      'small': ['tiny', 'little', 'miniature', 'petite', 'compact', 'modest'],\n      'happy': ['joyful', 'delighted', 'pleased', 'content', 'cheerful', 'elated'],\n      'sad': ['unhappy', 'depressed', 'melancholy', 'gloomy', 'sorrowful', 'down'],\n      'tired': ['exhausted', 'weary', 'fatigued', 'drained', 'worn out', 'sleepy'],\n      'angry': ['furious', 'mad', 'irritated', 'annoyed', 'upset', 'frustrated'],\n      'scared': ['afraid', 'frightened', 'terrified', 'panicked', 'nervous', 'worried'],\n      'surprised': ['shocked', 'amazed', 'astonished', 'stunned', 'bewildered', 'startled'],\n      'like': ['enjoy', 'love', 'appreciate', 'adore', 'fancy', 'prefer'],\n      'dislike': ['hate', 'detest', 'loathe', 'abhor', 'despise', 'can\\'t stand'],\n      'say': ['tell', 'speak', 'talk', 'mention', 'explain', 'describe'],\n      'go': ['visit', 'travel', 'head', 'move', 'proceed', 'journey'],\n      'come': ['arrive', 'reach', 'approach', 'appear', 'show up', 'turn up'],\n      'see': ['watch', 'observe', 'notice', 'spot', 'witness', 'view'],\n      'think': ['believe', 'consider', 'suppose', 'imagine', 'assume', 'feel'],\n      'know': ['understand', 'realize', 'recognize', 'comprehend', 'grasp', 'see'],\n      'want': ['desire', 'wish', 'hope', 'need', 'require', 'would like'],\n      'get': ['obtain', 'receive', 'acquire', 'gain', 'achieve', 'attain']\n    };\n    return alternatives[word] || [];\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const currentMood = customMood || mood;\n    if (!currentMood || !diaryEntry.trim()) {\n      alert('기분을 선택하고 일기 내용을 작성해주세요.');\n      return;\n    }\n    const newEntry = {\n      mood: currentMood,\n      entry: diaryEntry,\n      feedback: generateFeedback(diaryEntry),\n      learningSummary: learningSummary\n    };\n    const updatedEntries = {\n      ...diaryEntries,\n      [selectedDate]: newEntry\n    };\n    saveEntries(updatedEntries);\n    setFeedback(newEntry.feedback);\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    const entry = diaryEntries[date];\n    if (entry) {\n      setMood(entry.mood);\n      setCustomMood('');\n      setDiaryEntry(entry.entry);\n      setFeedback(entry.feedback || []);\n      setLearningSummary(entry.learningSummary || '');\n    } else {\n      setMood('');\n      setCustomMood('');\n      setDiaryEntry('');\n      setFeedback([]);\n      setLearningSummary('');\n    }\n  };\n  const handleMoodSelect = selectedMood => {\n    setMood(selectedMood);\n    setCustomMood('');\n    setShowCustomMoodInput(false);\n  };\n  const handleCustomMood = () => {\n    setShowCustomMoodInput(true);\n    setMood('');\n  };\n  const handleLearningSummaryChange = e => {\n    setLearningSummary(e.target.value);\n    if (diaryEntries[selectedDate]) {\n      const updatedEntries = {\n        ...diaryEntries,\n        [selectedDate]: {\n          ...diaryEntries[selectedDate],\n          learningSummary: e.target.value\n        }\n      };\n      saveEntries(updatedEntries);\n    }\n  };\n  const renderCalendar = () => {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = today.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const startDate = new Date(firstDay);\n    startDate.setDate(startDate.getDate() - firstDay.getDay());\n    const days = [];\n    const currentDate = new Date(startDate);\n    for (let i = 0; i < 42; i++) {\n      const day = new Date(currentDate);\n      // 한국 시간 기준으로 날짜 문자열 생성\n      const year = day.getFullYear();\n      const month = String(day.getMonth() + 1).padStart(2, '0');\n      const date = String(day.getDate()).padStart(2, '0');\n      const dateStr = `${year}-${month}-${date}`;\n      const hasEntry = diaryEntries[dateStr];\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 text-center cursor-pointer rounded transition-all duration-200 ${day.getMonth() === month - 1 ? 'text-gray-700 hover:bg-blue-50' : 'text-gray-400'} ${dateStr === selectedDate ? 'bg-blue-500 text-white font-semibold' : hasEntry ? 'bg-green-100 hover:bg-green-200' : 'hover:bg-gray-100'}`,\n        onClick: () => handleDateChange(dateStr),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: day.getDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), hasEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1 h-1 bg-green-500 rounded-full mx-auto mt-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this));\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return days;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8 max-w-6xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"text-center mb-8 flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-gray-800 mb-2\",\n          children: \"\\uC77C\\uAE30\\uC7A5 \\uD83D\\uDCD4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-600 mb-2\",\n          children: \"\\uC601\\uC5B4\\uB85C \\uC77C\\uAE30\\uB97C \\uC4F0\\uACE0 \\uCE5C\\uC808\\uD55C \\uC120\\uC0DD\\uB2D8\\uCC98\\uB7FC \\uD53C\\uB4DC\\uBC31\\uC744 \\uBC1B\\uC544\\uBCF4\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-4 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-700 font-semibold\",\n            children: [user.nickname, \"\\uB2D8 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"px-3 py-1 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 text-sm\",\n            children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-3 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl shadow-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: \"\\uD83D\\uDCC5 \\uB2EC\\uB825\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-7 gap-1 mb-4\",\n              children: ['일', '월', '화', '수', '목', '금', '토'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 text-center text-sm font-medium text-gray-500\",\n                children: day\n              }, day, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-7 gap-1\",\n              children: renderCalendar()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl shadow-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: \"\\uD83D\\uDE0A \\uC624\\uB298\\uC758 \\uAE30\\uBD84\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 gap-2 mb-4 max-h-60 overflow-y-auto\",\n              children: moods.map(moodItem => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleMoodSelect(moodItem.name),\n                className: `p-2 text-sm rounded-lg transition-all duration-200 flex items-center gap-2 ${mood === moodItem.name ? 'bg-blue-500 text-white font-medium' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-lg\",\n                  children: moodItem.emoji\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: moodItem.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 21\n                }, this)]\n              }, moodItem.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCustomMood,\n              className: \"w-full p-2 text-sm text-blue-600 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors duration-200 flex items-center justify-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2795\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 17\n              }, this), \" \\uC9C1\\uC811 \\uAE30\\uBD84 \\uC785\\uB825\\uD558\\uAE30\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 15\n            }, this), showCustomMoodInput && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: customMood,\n                onChange: e => setCustomMood(e.target.value),\n                placeholder: \"\\uAE30\\uBD84\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n                className: \"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-2 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl shadow-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-800 mb-2\",\n              children: new Date(selectedDate).toLocaleDateString('ko-KR', {\n                weekday: 'long',\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 15\n            }, this), diaryEntries[selectedDate] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"\\uAE30\\uBD84: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-blue-600\",\n                children: diaryEntries[selectedDate].mood\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl shadow-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: \"\\u270F\\uFE0F \\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: diaryEntry,\n                onChange: e => setDiaryEntry(e.target.value),\n                placeholder: `Today was a great day. \nI went to the park with my friends. \nWe had a wonderful time together.`,\n                className: \"w-full h-64 p-4 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-700 placeholder-gray-400 font-medium\",\n                style: {\n                  fontFamily: 'Georgia, Cambria, \"Times New Roman\", Times, serif'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: \"\\uC77C\\uAE30\\uB97C \\uC4F8 \\uB54C \\uB2E4\\uC74C\\uC744 \\uCC38\\uACE0\\uD574\\uBCF4\\uC138\\uC694: \\uC624\\uB298\\uC758 \\uAE30\\uBD84, \\uD588\\uB358 \\uC77C, \\uB9CC\\uB09C \\uC0AC\\uB78C, \\uB290\\uB080 \\uC810, \\uB0B4\\uC77C\\uC758 \\uACC4\\uD68D \\uB4F1\\uC5D0 \\uB300\\uD574 \\uC790\\uC720\\uB86D\\uAC8C \\uC601\\uC5B4\\uB85C \\uC791\\uC131\\uD574\\uBCF4\\uC138\\uC694. \\uC644\\uBCBD\\uD55C \\uBB38\\uC7A5\\uC744 \\uC4F0\\uB824\\uACE0 \\uC560\\uC4F0\\uAE30\\uBCF4\\uB2E4\\uB294 \\uC790\\uC720\\uB86D\\uAC8C \\uD45C\\uD604\\uD558\\uB294 \\uB370 \\uC9D1\\uC911\\uD574\\uBCF4\\uC138\\uC694!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-end\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors duration-200 font-medium flex items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2705\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 21\n                  }, this), \" \\uC800\\uC7A5\\uD558\\uACE0 \\uD53C\\uB4DC\\uBC31 \\uBC1B\\uAE30\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl shadow-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: \"\\uD83E\\uDD16 AI \\uC120\\uC0DD\\uB2D8\\uC758 \\uD53C\\uB4DC\\uBC31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 15\n            }, this), feedback.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-6\",\n              children: feedback.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border-l-4 border-blue-400 pl-4 py-3 bg-blue-50 rounded-r-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"inline-block bg-blue-100 text-blue-800 text-xs font-semibold px-2 py-1 rounded mb-2\",\n                    children: [\"\\uD83D\\uDCAC \\uD53C\\uB4DC\\uBC31 #\", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 811,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium text-gray-700\",\n                      children: \"\\uD83D\\uDCDD \\uC6D0\\uBB38:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 815,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-800 mt-1 bg-white p-2 rounded border\",\n                      children: item.original\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 816,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-gray-700\",\n                    children: \"\\u2728 \\uAC1C\\uC120 \\uC81C\\uC548:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 820,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-green-800 mt-1 bg-white p-2 rounded border font-medium\",\n                    children: item.suggestion\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 821,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 819,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-gray-700\",\n                    children: \"\\uD83D\\uDCD8 \\uC0C1\\uC138 \\uC124\\uBA85:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 824,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-700 mt-1 text-sm leading-relaxed bg-white p-3 rounded border border-gray-200\",\n                    children: item.reason\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-500 italic text-center py-8 bg-gray-50 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-4xl mb-2\",\n                children: \"\\uD83D\\uDC4B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 834,\n                columnNumber: 19\n              }, this), \"\\uC77C\\uAE30\\uB97C \\uC791\\uC131\\uD558\\uACE0 \\\"\\uC800\\uC7A5\\uD558\\uACE0 \\uD53C\\uB4DC\\uBC31 \\uBC1B\\uAE30\\\" \\uBC84\\uD2BC\\uC744 \\uD074\\uB9AD\\uD558\\uBA74,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 51\n              }, this), \"\\uCE5C\\uC808\\uD55C AI \\uC120\\uC0DD\\uB2D8\\uC774 \\uBB38\\uC7A5\\uBCC4\\uB85C \\uC0C1\\uC138\\uD55C \\uD53C\\uB4DC\\uBC31\\uC744 \\uC81C\\uACF5\\uD574\\uB4DC\\uB824\\uC694!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl shadow-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: \"\\uD83C\\uDF1F \\uC624\\uB298\\uC758 \\uD559\\uC2B5 \\uC815\\uB9AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mb-4 text-sm\",\n              children: \"\\uC624\\uB298 \\uC77C\\uAE30 \\uC791\\uC131\\uACFC \\uD53C\\uB4DC\\uBC31\\uC744 \\uD1B5\\uD574 \\uBC30\\uC6B4 \\uB0B4\\uC6A9\\uC744 \\uAC04\\uB2E8\\uD788 \\uC815\\uB9AC\\uD574\\uBCF4\\uC138\\uC694. \\uC774\\uB294 \\uB2F9\\uC2E0\\uC758 \\uD559\\uC2B5 \\uC5EC\\uC815\\uC744 \\uB418\\uB3CC\\uC544\\uBCF4\\uB294 \\uB370 \\uD070 \\uB3C4\\uC6C0\\uC774 \\uB429\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: learningSummary,\n              onChange: handleLearningSummaryChange,\n              placeholder: \"\\uC608: \\uC624\\uB298\\uC740 \\uACFC\\uAC70\\uD615 \\uB3D9\\uC0AC \\uC0AC\\uC6A9\\uBC95\\uACFC \\uBB38\\uC7A5\\uC744 \\uC790\\uC5F0\\uC2A4\\uB7FD\\uAC8C \\uC5F0\\uACB0\\uD558\\uB294 \\uBC29\\uBC95\\uC744 \\uBC30\\uC6E0\\uC5B4\\uC694. \\uD2B9\\uD788 'and'\\uB85C \\uBB38\\uC7A5\\uC744 \\uC2DC\\uC791\\uD558\\uB294 \\uAC83\\uC744 \\uD53C\\uD558\\uACE0, \\uB300\\uC2E0 \\uB9C8\\uCE68\\uD45C\\uB098 \\uC811\\uC18D\\uC0AC\\uB97C \\uC0AC\\uC6A9\\uD558\\uB294 \\uAC83\\uC774 \\uB354 \\uC790\\uC5F0\\uC2A4\\uB7FD\\uB2E4\\uB294 \\uAC83\\uC744 \\uC54C\\uAC8C \\uB418\\uC5C8\\uC5B4\\uC694.\",\n              className: \"w-full h-32 p-4 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-700 placeholder-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mt-2\",\n              children: \"\\uD83D\\uDCA1 \\uD301: \\uAD6C\\uCCB4\\uC801\\uC778 \\uC608\\uC2DC\\uC640 \\uD568\\uAED8 \\uC815\\uB9AC\\uD558\\uBA74 \\uAE30\\uC5B5\\uC5D0 \\uB354 \\uC624\\uB798 \\uB0A8\\uC544\\uC694!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 bg-white rounded-xl shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: \"\\u2728 \\uC0AC\\uC6A9 \\uD301:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold text-blue-600 mb-2\",\n              children: \"\\u2713 \\uAE30\\uBD84 \\uC120\\uD0DD:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc list-inside text-gray-600 space-y-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\uAC01 \\uAC10\\uC815 \\uC606\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uC774\\uBAA8\\uC9C0\\uAC00 \\uC788\\uC5B4\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\uAE30\\uBD84\\uC774 \\uC815\\uD655\\uD788 \\uB9DE\\uC9C0 \\uC54A\\uC73C\\uBA74 \\uC9C1\\uC811 \\uC785\\uB825\\uD560 \\uC218 \\uC788\\uC5B4\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\uB2EC\\uB825\\uC5D0\\uC11C \\uCD08\\uB85D\\uC0C9 \\uC810\\uC740 \\uC77C\\uAE30\\uB97C \\uC4F4 \\uB0A0\\uC9DC\\uB97C \\uC758\\uBBF8\\uD574\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold text-blue-600 mb-2\",\n              children: \"\\u2713 \\uC77C\\uAE30 \\uC791\\uC131:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc list-inside text-gray-600 space-y-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\uD55C\\uAE00\\uACFC \\uC601\\uC5B4\\uB97C \\uC11E\\uC5B4 \\uC368\\uB3C4 \\uAD1C\\uCC2E\\uC544\\uC694 (\\uD53C\\uB4DC\\uBC31\\uC5D0\\uC11C \\uC790\\uB3D9\\uC73C\\uB85C \\uC218\\uC815\\uD574\\uB4DC\\uB824\\uC694)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\uBB38\\uBC95 \\uC624\\uB958\\uAC00 \\uC788\\uC5B4\\uB3C4 \\uAD1C\\uCC2E\\uC544\\uC694 (\\uBC30\\uC6B0\\uB294 \\uACFC\\uC815\\uC774\\uB2C8\\uAE4C\\uC694!)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\uD559\\uC2B5 \\uC815\\uB9AC\\uB97C \\uAF2D \\uC791\\uC131\\uD574\\uBCF4\\uC138\\uC694 (\\uAE30\\uC5B5\\uC5D0 \\uC624\\uB798 \\uB0A8\\uC544\\uC694)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-4 bg-green-50 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-green-800\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uD83D\\uDCA1 \\uD559\\uC2B5 \\uC870\\uC5B8:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 15\n            }, this), \" \\uB9E4\\uC77C \\uC870\\uAE08\\uC529\\uC774\\uB77C\\uB3C4 \\uAFB8\\uC900\\uD788 \\uC791\\uC131\\uD558\\uB294 \\uAC83\\uC774 \\uAC00\\uC7A5 \\uC911\\uC694\\uD574\\uC694. \\uC624\\uB298 \\uBC30\\uC6B4 \\uB0B4\\uC6A9\\uC744 \\uB0B4\\uC77C \\uC77C\\uAE30\\uC5D0 \\uC801\\uC6A9\\uD574\\uBCF4\\uB294 \\uAC83\\uB3C4 \\uC88B\\uC740 \\uBC29\\uBC95\\uC774\\uC5D0\\uC694!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 686,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bm4ulmRA0SGuBBI2Gai2HSkPvdg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","jsxDEV","_jsxDEV","App","_s","user","setUser","getTodayDate","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","selectedDate","setSelectedDate","mood","setMood","customMood","setCustomMood","diaryEntry","setDiaryEntry","feedback","setFeedback","diaryEntries","setDiaryEntries","showCustomMoodInput","setShowCustomMoodInput","learningSummary","setLearningSummary","savedUser","localStorage","getItem","JSON","parse","savedEntries","_parsedEntries$select","parsedEntries","handleLogin","userData","setItem","stringify","handleLogout","removeItem","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","moods","name","emoji","saveEntries","entries","e","console","warn","detectKoreanWords","text","koreanRegex","words","split","koreanWords","forEach","word","cleanWord","replace","test","length","push","suggestEnglishEquivalent","koreanWord","dictionary","analyzeSentence","sentence","index","feedbackItems","processedSentence","trim","originalSentence","hasChanges","reasons","englishEquivalent","toInfinitiveErrors","Object","incorrect","correct","regex","RegExp","contextBasedTenseFixes","toLowerCase","charAt","toUpperCase","slice","conjunctions","firstWord","includes","shift","join","commaIndex","indexOf","afterComma","substring","irregularPastForms","present","past","match","timeIndicators","hasTimeIndicator","some","indicator","feelingAdjectives","ingForm","edForm","informalToFormal","informal","formal","longSentenceWords","breakPoint","Math","floor","firstPart","secondPart","commonNouns","noun","noArticleContexts","hasNoArticleContext","context","countableNouns","beforeNoun","afterNoun","hasArticle","isPlural","vowelSound","article","original","suggestion","reason","generateFeedback","sentences","filter","allFeedback","contextualSuggestions","generateContextualSuggestions","suggestions","lowerText","s","sentenceStarts","map","startCounts","start","repetitiveStart","find","count","wordCounts","overusedWords","alternatives","getWordAlternatives","handleSubmit","preventDefault","currentMood","alert","newEntry","entry","updatedEntries","handleDateChange","date","handleMoodSelect","selectedMood","handleCustomMood","handleLearningSummaryChange","target","value","renderCalendar","today","firstDay","lastDay","startDate","setDate","getDay","days","currentDate","i","dateStr","hasEntry","className","onClick","children","nickname","moodItem","type","onChange","placeholder","toLocaleDateString","weekday","onSubmit","style","fontFamily","item","_c","$RefreshReg$"],"sources":["/Users/jihyunlee/Desktop/커서AI(영어일기버전2)/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Login from \"./Login\";\n\nconst App = () => {\n  // 모든 Hook을 최상단에서 호출\n  const [user, setUser] = useState(null);\n  \n  // 한국 시간 기준으로 오늘 날짜 계산\n  const getTodayDate = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n  \n  const [selectedDate, setSelectedDate] = useState(getTodayDate());\n  const [mood, setMood] = useState('');\n  const [customMood, setCustomMood] = useState('');\n  const [diaryEntry, setDiaryEntry] = useState('');\n  const [feedback, setFeedback] = useState([]);\n  const [diaryEntries, setDiaryEntries] = useState({});\n  const [showCustomMoodInput, setShowCustomMoodInput] = useState(false);\n  const [learningSummary, setLearningSummary] = useState('');\n\n  // 로그인 상태 확인\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n  }, []);\n\n  // Load saved entries from localStorage\n  useEffect(() => {\n    if (user) { // 로그인된 상태에서만 실행\n      const savedEntries = localStorage.getItem('diaryEntries');\n      if (savedEntries) {\n        const parsedEntries = JSON.parse(savedEntries);\n        setDiaryEntries(parsedEntries);\n        // 현재 선택된 날짜의 데이터만 로드\n        if (parsedEntries[selectedDate]?.learningSummary) {\n          setLearningSummary(parsedEntries[selectedDate].learningSummary);\n        }\n      }\n    }\n  }, [user]); // selectedDate 의존성 제거\n\n  // 로그인 핸들러\n  const handleLogin = (userData) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  // 로그아웃 핸들러\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('diaryEntries');\n  };\n\n  // 로그인 상태가 아니면 로그인 화면 표시\n  if (!user) {\n    return <Login onLogin={handleLogin} />;\n  }\n\n  const moods = [\n    { name: 'Happy', emoji: '😊' },\n    { name: 'Sad', emoji: '😢' },\n    { name: 'Excited', emoji: '🎉' },\n    { name: 'Anxious', emoji: '😰' },\n    { name: 'Calm', emoji: '🧘' },\n    { name: 'Stressed', emoji: '😫' },\n    { name: 'Grateful', emoji: '🙏' },\n    { name: 'Tired', emoji: '😴' },\n    { name: 'Energetic', emoji: '⚡' },\n    { name: 'Hopeful', emoji: '🌟' },\n    { name: 'Frustrated', emoji: '😤' },\n    { name: 'Content', emoji: '😌' },\n    { name: 'Lonely', emoji: '😔' },\n    { name: 'Inspired', emoji: '💡' },\n    { name: 'Bored', emoji: '🥱' },\n    { name: 'Confident', emoji: '💪' },\n    { name: 'Nervous', emoji: '😬' },\n    { name: 'Peaceful', emoji: '🕊️' },\n    { name: 'Overwhelmed', emoji: '😵' },\n    { name: 'Curious', emoji: '🔍' },\n    { name: 'Relieved', emoji: '😅' },\n    { name: 'Disappointed', emoji: '😞' },\n    { name: 'Proud', emoji: '🏆' },\n    { name: 'Ashamed', emoji: '😳' },\n    { name: 'Optimistic', emoji: '☀️' },\n    { name: 'Pessimistic', emoji: '🌧️' },\n    { name: 'Motivated', emoji: '🚀' },\n    { name: 'Drained', emoji: '🔋' },\n    { name: 'Playful', emoji: '🎈' },\n    { name: 'Serious', emoji: '👔' }\n  ];\n\n  // Save entries to localStorage\n  const saveEntries = (entries) => {\n    setDiaryEntries(entries);\n    try {\n      localStorage.setItem('diaryEntries', JSON.stringify(entries));\n    } catch (e) {\n      console.warn('Could not save to localStorage', e);\n    }\n  };\n\n  const detectKoreanWords = (text) => {\n    const koreanRegex = /[\\uAC00-\\uD7A3]/;\n    const words = text.split(/\\s+/);\n    const koreanWords = [];\n    \n    words.forEach(word => {\n      const cleanWord = word.replace(/[.,!?;:()\"'-]/g, '');\n      if (koreanRegex.test(cleanWord) && cleanWord.length > 1) {\n        koreanWords.push(cleanWord);\n      }\n    });\n    \n    return koreanWords;\n  };\n\n  const suggestEnglishEquivalent = (koreanWord) => {\n    const dictionary = {\n      '평영': 'breaststroke',\n      '배영': 'backstroke',\n      '자유형': 'freestyle',\n      '접영': 'butterfly stroke',\n      '밥': 'meal',\n      '점심': 'lunch',\n      '아침': 'breakfast',\n      '저녁': 'dinner',\n      '학교': 'school',\n      '회사': 'office',\n      '친구': 'friend',\n      '가족': 'family',\n      '엄마': 'mom',\n      '아빠': 'dad',\n      '형': 'older brother',\n      '누나': 'older sister',\n      '오빠': 'older brother (female speaker)',\n      '언니': 'older sister (female speaker)',\n      '선생님': 'teacher',\n      '학생': 'student',\n      '운동': 'exercise',\n      '공부': 'study',\n      '놀이': 'play',\n      '여행': 'trip',\n      '휴가': 'vacation',\n      '생일': 'birthday',\n      '결혼': 'marriage',\n      '이별': 'breakup',\n      '사랑': 'love',\n      '기쁨': 'joy',\n      '슬픔': 'sadness',\n      '화남': 'anger',\n      '두려움': 'fear'\n    };\n    \n    return dictionary[koreanWord] || null;\n  };\n\n  const analyzeSentence = (sentence, index) => {\n    const feedbackItems = [];\n    let processedSentence = sentence.trim();\n    \n    if (!processedSentence) return feedbackItems;\n    \n    const originalSentence = processedSentence;\n    let hasChanges = false;\n    let reasons = []; // 배열로 변경하여 각 오류별로 구분\n    \n    // 1. Check for Korean words in English text\n    const koreanWords = detectKoreanWords(processedSentence);\n    if (koreanWords.length > 0) {\n      koreanWords.forEach(koreanWord => {\n        const englishEquivalent = suggestEnglishEquivalent(koreanWord);\n        if (englishEquivalent) {\n          processedSentence = processedSentence.replace(koreanWord, englishEquivalent);\n          hasChanges = true;\n          reasons.push(`• '${koreanWord}'을(를) '${englishEquivalent}'로 바꾸세요.\\n  영어 일기에서는 영어 표현을 사용하는 것이 좋아요.`);\n        } else {\n          reasons.push(`• '${koreanWord}'은(는) 한국어 단어예요.\\n  영어 표현을 찾아서 사용해보세요.`);\n        }\n      });\n    }\n    \n    // 2. Fix \"to do\" grammar errors (to did, to went, etc.)\n    const toInfinitiveErrors = {\n      'to did': 'to do',\n      'to went': 'to go',\n      'to saw': 'to see',\n      'to ate': 'to eat',\n      'to drank': 'to drink',\n      'to wrote': 'to write',\n      'to slept': 'to sleep',\n      'to felt': 'to feel',\n      'to bought': 'to buy',\n      'to brought': 'to bring',\n      'to thought': 'to think',\n      'to caught': 'to catch',\n      'to knew': 'to know',\n      'to took': 'to take',\n      'to came': 'to come'\n    };\n    \n    Object.entries(toInfinitiveErrors).forEach(([incorrect, correct]) => {\n      const regex = new RegExp(`\\\\b${incorrect}\\\\b`, 'gi');\n      if (regex.test(processedSentence)) {\n        processedSentence = processedSentence.replace(regex, correct);\n        hasChanges = true;\n        reasons.push(`• '${incorrect}' → '${correct}': 'to' 뒤에는 동사의 원형을 사용해야 해요.\\n  예: to do, to go, to see, to eat`);\n      }\n    });\n    \n    // 3. Fix common verb tense errors in context\n    const contextBasedTenseFixes = {\n      'I am go': 'I am going',\n      'I am went': 'I went',\n      'I am do': 'I am doing',\n      'I am did': 'I did',\n      'I am eat': 'I am eating',\n      'I am ate': 'I ate',\n      'I am see': 'I am seeing',\n      'I am saw': 'I saw',\n      'I am have': 'I have',\n      'I am had': 'I had',\n      'I am get': 'I am getting',\n      'I am got': 'I got',\n      'I am make': 'I am making',\n      'I am made': 'I made',\n      'I am take': 'I am taking',\n      'I am took': 'I took',\n      'I am come': 'I am coming',\n      'I am came': 'I came'\n    };\n    \n    Object.entries(contextBasedTenseFixes).forEach(([incorrect, correct]) => {\n      const regex = new RegExp(`\\\\b${incorrect}\\\\b`, 'gi');\n      if (regex.test(processedSentence)) {\n        processedSentence = processedSentence.replace(regex, correct);\n        hasChanges = true;\n        reasons.push(`• '${incorrect}' → '${correct}': 'am' 뒤에는 동사의 -ing 형태나 과거형을 사용해야 해요.\\n  현재진행형: I am going, I am eating\\n  과거형: I went, I ate`);\n      }\n    });\n    \n    // 4. Check if sentence starts with lowercase letter\n    if (processedSentence.length > 0 && processedSentence[0] === processedSentence[0].toLowerCase() && \n        /^[a-z]/.test(processedSentence)) {\n      processedSentence = processedSentence.charAt(0).toUpperCase() + processedSentence.slice(1);\n      hasChanges = true;\n      reasons.push(`• 문장은 대문자로 시작해야 해요.\\n  예: \"i went to school\" → \"I went to school\"`);\n    }\n    \n    // 5. Check if sentence starts with conjunction\n    const conjunctions = ['and', 'but', 'or', 'so', 'because', 'although', 'though', 'since', 'while'];\n    const firstWord = processedSentence.split(' ')[0].toLowerCase().replace(/[.,!?;:]/g, '');\n    \n    if (conjunctions.includes(firstWord)) {\n      const words = processedSentence.split(' ');\n      words.shift();\n      processedSentence = words.join(' ');\n      if (processedSentence.length > 0) {\n        processedSentence = processedSentence.charAt(0).toUpperCase() + processedSentence.slice(1);\n      }\n      hasChanges = true;\n      reasons.push(`• 문장을 접속사('${firstWord}')로 시작하지 마세요.\\n  접속사는 두 문장을 연결할 때 사용해요.\\n  예: \"I was tired. So I went to bed early.\"`);\n    }\n    \n    // 6. Check for comma splice\n    if (processedSentence.includes(',') && \n        (processedSentence.includes(' I ') || processedSentence.includes(' He ') || \n         processedSentence.includes(' She ') || processedSentence.includes(' It ') ||\n         processedSentence.includes(' We ') || processedSentence.includes(' They '))) {\n      const commaIndex = processedSentence.indexOf(',');\n      const afterComma = processedSentence.substring(commaIndex + 1).trim();\n      \n      if (afterComma.length > 0 && /^[A-Z][a-z]/.test(afterComma)) {\n        processedSentence = processedSentence.substring(0, commaIndex) + '. ' + \n                          afterComma.charAt(0).toUpperCase() + afterComma.slice(1);\n        hasChanges = true;\n        reasons.push(`• 쉼표로 두 개의 완전한 문장을 연결하지 마세요.\\n  마침표로 나누거나 접속사를 사용하세요.\\n  예: \"I was tired, I went to bed\" → \"I was tired. I went to bed\"`);\n      }\n    }\n    \n    // 7. Check for missing space after punctuation\n    if (/[.,!?;:][a-zA-Z]/.test(processedSentence)) {\n      processedSentence = processedSentence.replace(/([.,!?;:])([a-zA-Z])/g, '$1 $2');\n      hasChanges = true;\n      reasons.push(`• 구두점 뒤에는 공백을 넣어야 해요.\\n  예: \"I went to school.It was fun.\" → \"I went to school. It was fun.\"`);\n    }\n    \n    // 8. Check for inappropriate use of present tense for past events\n    const irregularPastForms = {\n      'go': 'went', 'see': 'saw', 'do': 'did', 'have': 'had', 'get': 'got', \n      'make': 'made', 'say': 'said', 'know': 'knew', 'take': 'took', 'come': 'came',\n      'eat': 'ate', 'drink': 'drank', 'write': 'wrote', 'read': 'read', 'sleep': 'slept',\n      'feel': 'felt', 'buy': 'bought', 'bring': 'brought', 'think': 'thought', 'catch': 'caught'\n    };\n    \n    Object.entries(irregularPastForms).forEach(([present, past]) => {\n      const regex = new RegExp(`\\\\b${present}\\\\b`, 'gi');\n      if (regex.test(processedSentence) && !processedSentence.match(/\\b(am|is|are|was|were|been|being)\\b/gi)) {\n        const timeIndicators = ['today', 'yesterday', 'morning', 'afternoon', 'evening', 'night', 'last', 'ago'];\n        const hasTimeIndicator = timeIndicators.some(indicator => \n          processedSentence.toLowerCase().includes(indicator)\n        );\n        \n        if (hasTimeIndicator || !processedSentence.match(/\\b(now|currently|right now|these days)\\b/gi)) {\n          processedSentence = processedSentence.replace(regex, past);\n          hasChanges = true;\n          reasons.push(`• 과거 일을 서술할 때는 '${present}' → '${past}'를 사용하세요.\\n  일기에서는 일반적으로 과거형을 사용해요.\\n  예: \"I go to school\" → \"I went to school\"`);\n        }\n      }\n    });\n    \n    // 9. Check for incorrect adjective usage with feelings\n    const feelingAdjectives = {\n      'frustrating': 'frustrated',\n      'exciting': 'excited',\n      'boring': 'bored',\n      'tiring': 'tired',\n      'surprising': 'surprised',\n      'interesting': 'interested',\n      'confusing': 'confused',\n      'amazing': 'amazed',\n      'shocking': 'shocked',\n      'disappointing': 'disappointed',\n      'satisfying': 'satisfied',\n      'worrying': 'worried',\n      'terrifying': 'terrified',\n      'pleasing': 'pleased',\n      'annoying': 'annoyed'\n    };\n    \n    Object.entries(feelingAdjectives).forEach(([ingForm, edForm]) => {\n      const regex = new RegExp(`\\\\bI\\\\s+(am|was|feel|felt)\\\\s+${ingForm}\\\\b`, 'gi');\n      if (regex.test(processedSentence)) {\n        processedSentence = processedSentence.replace(regex, (match) => {\n          return match.replace(new RegExp(`${ingForm}`, 'i'), edForm);\n        });\n        hasChanges = true;\n        reasons.push(`• 기분 표현에는 '${ingForm}' → '${edForm}'를 사용하세요.\\n  -ing: 어떤 것이 그 기분을 주는지 (The movie was exciting)\\n  -ed: 당신이 그 기분을 느낄 때 (I was excited)`);\n      }\n    });\n    \n    // 10. Replace informal expressions with more formal ones\n    const informalToFormal = {\n      'a lot': 'significantly',\n      'kind of': 'somewhat',\n      'sort of': 'rather',\n      'gonna': 'going to',\n      'wanna': 'want to',\n      'gotta': 'have to',\n      'pretty': 'quite',\n      'really': 'very',\n      'very very': 'extremely',\n      'super': 'extremely',\n      'awesome': 'excellent',\n      'cool': 'great',\n      'bad': 'poor',\n      'stuff': 'things',\n      'get': 'obtain or become',\n      'make': 'create or cause'\n    };\n    \n    Object.entries(informalToFormal).forEach(([informal, formal]) => {\n      const regex = new RegExp(`\\\\b${informal}\\\\b`, 'gi');\n      if (regex.test(processedSentence)) {\n        processedSentence = processedSentence.replace(regex, formal);\n        hasChanges = true;\n        reasons.push(`• '${informal}' → '${formal}': 더 정교한 표현을 사용하세요.\\n  비형식적 표현보다 형식적인 표현이 일기에 적합해요.`);\n      }\n    });\n    \n    // 11. Improve vague expressions (moved to end to avoid conflicts)\n    if (processedSentence.toLowerCase().includes('thing') || processedSentence.toLowerCase().includes('things')) {\n      processedSentence = processedSentence.replace(/\\bthing\\b/gi, 'item or activity');\n      processedSentence = processedSentence.replace(/\\bthings\\b/gi, 'various activities or items');\n      hasChanges = true;\n      reasons.push(`• 'thing/things' → 더 구체적인 표현을 사용하세요.\\n  모호한 표현보다 구체적인 설명이 좋아요.\\n  예: \"I did many things\" → \"I did various activities\"`);\n    }\n    \n    // 12. Fix run-on sentences\n    const longSentenceWords = processedSentence.split(' ');\n    if (longSentenceWords.length > 25 && !processedSentence.includes('.')) {\n      const breakPoint = Math.floor(longSentenceWords.length * 0.6);\n      const firstPart = longSentenceWords.slice(0, breakPoint).join(' ');\n      const secondPart = longSentenceWords.slice(breakPoint).join(' ');\n      processedSentence = `${firstPart}. ${secondPart.charAt(0).toUpperCase() + secondPart.slice(1)}`;\n      hasChanges = true;\n      reasons.push(`• 긴 문장을 두 개로 나누세요.\\n  15-20단어를 넘는 문장은 피하는 것이 좋아요.\\n  문장을 나누면 더 명확하게 표현할 수 있어요.`);\n    }\n    \n    // 13. Check for common article errors\n    const commonNouns = ['school', 'work', 'home', 'bed', 'hospital', 'church', 'college', 'university'];\n    commonNouns.forEach(noun => {\n      const regex = new RegExp(`\\\\bthe\\\\s+${noun}\\\\b`, 'gi');\n      if (regex.test(processedSentence) && !processedSentence.match(/\\b(in|at|to|from) the\\b/gi)) {\n        const noArticleContexts = ['go to', 'be at', 'come from', 'arrive at'];\n        const hasNoArticleContext = noArticleContexts.some(context => \n          processedSentence.toLowerCase().includes(context)\n        );\n        \n        if (hasNoArticleContext) {\n          processedSentence = processedSentence.replace(regex, noun);\n          hasChanges = true;\n          reasons.push(`• 'the ${noun}' → '${noun}': 일부 장소명사는 'the' 없이 사용해요.\\n  예: go to school, be at work, go home`);\n        }\n      }\n    });\n    \n    // 14. Check for missing articles before singular countable nouns\n    const countableNouns = ['book', 'movie', 'car', 'house', 'friend', 'teacher', 'student', 'dog', 'cat', 'phone', 'computer', 'table', 'chair', 'window', 'door'];\n    countableNouns.forEach(noun => {\n      const regex = new RegExp(`\\\\b${noun}\\\\b`, 'gi');\n      if (regex.test(processedSentence)) {\n        const beforeNoun = processedSentence.substring(0, processedSentence.toLowerCase().indexOf(noun.toLowerCase()));\n        const afterNoun = processedSentence.substring(processedSentence.toLowerCase().indexOf(noun.toLowerCase()) + noun.length);\n        \n        // Check if there's already an article before the noun\n        const hasArticle = /\\b(a|an|the|my|your|his|her|its|our|their)\\s+$/i.test(beforeNoun);\n        const isPlural = /\\b\\w+s\\b/i.test(processedSentence);\n        \n        if (!hasArticle && !isPlural && !beforeNoun.match(/\\b(in|at|on|to|from|with|by|for|of)\\s+$/i)) {\n          const vowelSound = /^[aeiou]/i.test(noun);\n          const article = vowelSound ? 'an' : 'a';\n          processedSentence = processedSentence.replace(regex, `${article} ${noun}`);\n          hasChanges = true;\n          reasons.push(`• '${noun}' → '${article} ${noun}': 단수 가산명사 앞에는 관사를 사용하세요.\\n  예: a book, an apple, the car`);\n        }\n      }\n    });\n    \n    // 15. Check for double negatives\n    if (processedSentence.toLowerCase().includes('not') && \n        (processedSentence.toLowerCase().includes('no') || processedSentence.toLowerCase().includes('never') || \n         processedSentence.toLowerCase().includes('nothing') || processedSentence.toLowerCase().includes('nobody'))) {\n      processedSentence = processedSentence.replace(/\\bnot\\b/gi, '');\n      processedSentence = processedSentence.replace(/\\s+/g, ' ').trim();\n      hasChanges = true;\n      reasons.push(`• 이중 부정을 피하세요.\\n  'not'과 'no/never' 등을 함께 사용하지 마세요.\\n  예: \"I don't have no money\" → \"I have no money\"`);\n    }\n    \n    // 16. If we've made changes, add feedback item\n    if (hasChanges) {\n      feedbackItems.push({\n        original: originalSentence,\n        suggestion: processedSentence,\n        reason: reasons.join('\\n\\n') // 각 피드백 사이에 빈 줄 추가\n      });\n    } \n    // If no changes but sentence is reasonably long, provide constructive feedback\n    else if (originalSentence.length > 15) {\n      feedbackItems.push({\n        original: originalSentence,\n        suggestion: originalSentence,\n        reason: \"• 문장이 아주 잘 작성되었어요!\\n\\n• 더 나은 표현을 위해 다음을 시도해보세요:\\n  - 더 정교한 어휘 사용\\n  - 다양한 문장 구조 사용\\n  - 구체적인 설명 추가\"\n      });\n    }\n    \n    return feedbackItems;\n  };\n\n  const generateFeedback = (text) => {\n    if (!text.trim()) return [];\n    \n    const sentences = text.split(/[.!?]+/).filter(sentence => sentence.trim().length > 0);\n    const allFeedback = [];\n    \n    sentences.forEach((sentence, index) => {\n      const feedback = analyzeSentence(sentence, index);\n      allFeedback.push(...feedback);\n    });\n    \n    // Add contextual suggestions based on the overall text\n    if (allFeedback.length === 0 && text.length > 50) {\n      const contextualSuggestions = generateContextualSuggestions(text);\n      allFeedback.push(...contextualSuggestions);\n    }\n    \n    return allFeedback.slice(0, 5); // Limit to 5 feedback items\n  };\n\n  const generateContextualSuggestions = (text) => {\n    const suggestions = [];\n    const lowerText = text.toLowerCase();\n    \n    // Check for repetitive sentence structures\n    const sentences = text.split(/[.!?]+/).filter(s => s.trim().length > 10);\n    const sentenceStarts = sentences.map(s => s.trim().split(' ')[0].toLowerCase());\n    const startCounts = {};\n    \n    sentenceStarts.forEach(start => {\n      startCounts[start] = (startCounts[start] || 0) + 1;\n    });\n    \n    const repetitiveStart = Object.entries(startCounts).find(([word, count]) => count > 2);\n    if (repetitiveStart) {\n      suggestions.push({\n        original: `문장들이 '${repetitiveStart[0]}'로 시작하는 경우가 많아요.`,\n        suggestion: \"다양한 문장 시작을 시도해보세요: 'I', 'The', 'It', 'There', 'This', 'That' 등을 활용하면 더 흥미로운 글이 됩니다.\",\n        reason: \"• 같은 단어로 문장을 시작하면 글의 흐름이 단조로워져요.\\n• 다양한 문장 구조를 사용하면 더 자연스럽고 읽기 쉬운 글이 됩니다.\"\n      });\n    }\n    \n    // Check for vocabulary variety\n    const words = lowerText.split(/\\s+/).filter(word => word.length > 3);\n    const wordCounts = {};\n    words.forEach(word => {\n      wordCounts[word] = (wordCounts[word] || 0) + 1;\n    });\n    \n    const overusedWords = Object.entries(wordCounts).filter(([word, count]) => count > 3);\n    if (overusedWords.length > 0) {\n      const word = overusedWords[0][0];\n      const alternatives = getWordAlternatives(word);\n      if (alternatives.length > 0) {\n        suggestions.push({\n          original: `'${word}' 단어를 여러 번 사용했어요.`,\n          suggestion: `다른 표현을 시도해보세요: ${alternatives.join(', ')}`,\n          reason: \"• 같은 단어를 반복 사용하면 글의 표현력이 떨어져요.\\n• 다양한 동의어를 사용하면 더 풍부한 표현이 가능합니다.\"\n        });\n      }\n    }\n    \n    // Check for text length and structure\n    if (text.length < 100) {\n      suggestions.push({\n        original: \"일기가 조금 짧아요.\",\n        suggestion: \"더 자세한 설명을 추가해보세요: 언제, 어디서, 누구와, 무엇을, 어떻게, 왜에 대한 정보를 포함하면 더 풍부한 일기가 됩니다.\",\n        reason: \"• 짧은 일기보다는 구체적인 세부사항을 포함한 긴 일기가 영어 학습에 더 도움이 됩니다.\\n• 5W1H(언제, 어디서, 누구와, 무엇을, 어떻게, 왜)를 고려해서 작성해보세요.\"\n      });\n    }\n    \n    return suggestions;\n  };\n\n  const getWordAlternatives = (word) => {\n    const alternatives = {\n      'good': ['excellent', 'great', 'wonderful', 'fantastic', 'amazing', 'outstanding'],\n      'bad': ['terrible', 'awful', 'horrible', 'dreadful', 'poor', 'disappointing'],\n      'big': ['large', 'huge', 'enormous', 'massive', 'gigantic', 'substantial'],\n      'small': ['tiny', 'little', 'miniature', 'petite', 'compact', 'modest'],\n      'happy': ['joyful', 'delighted', 'pleased', 'content', 'cheerful', 'elated'],\n      'sad': ['unhappy', 'depressed', 'melancholy', 'gloomy', 'sorrowful', 'down'],\n      'tired': ['exhausted', 'weary', 'fatigued', 'drained', 'worn out', 'sleepy'],\n      'angry': ['furious', 'mad', 'irritated', 'annoyed', 'upset', 'frustrated'],\n      'scared': ['afraid', 'frightened', 'terrified', 'panicked', 'nervous', 'worried'],\n      'surprised': ['shocked', 'amazed', 'astonished', 'stunned', 'bewildered', 'startled'],\n      'like': ['enjoy', 'love', 'appreciate', 'adore', 'fancy', 'prefer'],\n      'dislike': ['hate', 'detest', 'loathe', 'abhor', 'despise', 'can\\'t stand'],\n      'say': ['tell', 'speak', 'talk', 'mention', 'explain', 'describe'],\n      'go': ['visit', 'travel', 'head', 'move', 'proceed', 'journey'],\n      'come': ['arrive', 'reach', 'approach', 'appear', 'show up', 'turn up'],\n      'see': ['watch', 'observe', 'notice', 'spot', 'witness', 'view'],\n      'think': ['believe', 'consider', 'suppose', 'imagine', 'assume', 'feel'],\n      'know': ['understand', 'realize', 'recognize', 'comprehend', 'grasp', 'see'],\n      'want': ['desire', 'wish', 'hope', 'need', 'require', 'would like'],\n      'get': ['obtain', 'receive', 'acquire', 'gain', 'achieve', 'attain']\n    };\n    \n    return alternatives[word] || [];\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const currentMood = customMood || mood;\n    if (!currentMood || !diaryEntry.trim()) {\n      alert('기분을 선택하고 일기 내용을 작성해주세요.');\n      return;\n    }\n\n    const newEntry = {\n      mood: currentMood,\n      entry: diaryEntry,\n      feedback: generateFeedback(diaryEntry),\n      learningSummary: learningSummary\n    };\n\n    const updatedEntries = {\n      ...diaryEntries,\n      [selectedDate]: newEntry\n    };\n    \n    saveEntries(updatedEntries);\n    setFeedback(newEntry.feedback);\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    const entry = diaryEntries[date];\n    if (entry) {\n      setMood(entry.mood);\n      setCustomMood('');\n      setDiaryEntry(entry.entry);\n      setFeedback(entry.feedback || []);\n      setLearningSummary(entry.learningSummary || '');\n    } else {\n      setMood('');\n      setCustomMood('');\n      setDiaryEntry('');\n      setFeedback([]);\n      setLearningSummary('');\n    }\n  };\n\n  const handleMoodSelect = (selectedMood) => {\n    setMood(selectedMood);\n    setCustomMood('');\n    setShowCustomMoodInput(false);\n  };\n\n  const handleCustomMood = () => {\n    setShowCustomMoodInput(true);\n    setMood('');\n  };\n\n  const handleLearningSummaryChange = (e) => {\n    setLearningSummary(e.target.value);\n    if (diaryEntries[selectedDate]) {\n      const updatedEntries = {\n        ...diaryEntries,\n        [selectedDate]: {\n          ...diaryEntries[selectedDate],\n          learningSummary: e.target.value\n        }\n      };\n      saveEntries(updatedEntries);\n    }\n  };\n\n  const renderCalendar = () => {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = today.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const startDate = new Date(firstDay);\n    startDate.setDate(startDate.getDate() - firstDay.getDay());\n    \n    const days = [];\n    const currentDate = new Date(startDate);\n    \n    for (let i = 0; i < 42; i++) {\n      const day = new Date(currentDate);\n      // 한국 시간 기준으로 날짜 문자열 생성\n      const year = day.getFullYear();\n      const month = String(day.getMonth() + 1).padStart(2, '0');\n      const date = String(day.getDate()).padStart(2, '0');\n      const dateStr = `${year}-${month}-${date}`;\n      \n      const hasEntry = diaryEntries[dateStr];\n      \n      days.push(\n        <div\n          key={i}\n          className={`p-2 text-center cursor-pointer rounded transition-all duration-200 ${\n            day.getMonth() === month - 1\n              ? 'text-gray-700 hover:bg-blue-50'\n              : 'text-gray-400'\n          } ${\n            dateStr === selectedDate\n              ? 'bg-blue-500 text-white font-semibold'\n              : hasEntry\n              ? 'bg-green-100 hover:bg-green-200'\n              : 'hover:bg-gray-100'\n          }`}\n          onClick={() => handleDateChange(dateStr)}\n        >\n          <div className=\"text-sm\">{day.getDate()}</div>\n          {hasEntry && (\n            <div className=\"w-1 h-1 bg-green-500 rounded-full mx-auto mt-1\"></div>\n          )}\n        </div>\n      );\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    \n    return days;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        <header className=\"text-center mb-8 flex flex-col items-center\">\n          <h1 className=\"text-4xl font-bold text-gray-800 mb-2\">일기장 📔</h1>\n          <p className=\"text-lg text-gray-600 mb-2\">영어로 일기를 쓰고 친절한 선생님처럼 피드백을 받아보세요</p>\n          <div className=\"flex items-center gap-4 mt-2\">\n            <span className=\"text-blue-700 font-semibold\">{user.nickname}님 환영합니다!</span>\n            <button onClick={handleLogout} className=\"px-3 py-1 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 text-sm\">로그아웃</button>\n          </div>\n        </header>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Calendar and Mood Section */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Calendar */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">📅 달력</h2>\n              <div className=\"grid grid-cols-7 gap-1 mb-4\">\n                {['일', '월', '화', '수', '목', '금', '토'].map(day => (\n                  <div key={day} className=\"p-2 text-center text-sm font-medium text-gray-500\">\n                    {day}\n                  </div>\n                ))}\n              </div>\n              <div className=\"grid grid-cols-7 gap-1\">\n                {renderCalendar()}\n              </div>\n            </div>\n\n            {/* Mood Selection */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">😊 오늘의 기분</h2>\n              <div className=\"grid grid-cols-2 gap-2 mb-4 max-h-60 overflow-y-auto\">\n                {moods.map((moodItem) => (\n                  <button\n                    key={moodItem.name}\n                    onClick={() => handleMoodSelect(moodItem.name)}\n                    className={`p-2 text-sm rounded-lg transition-all duration-200 flex items-center gap-2 ${\n                      mood === moodItem.name\n                        ? 'bg-blue-500 text-white font-medium'\n                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                    }`}\n                  >\n                    <span className=\"text-lg\">{moodItem.emoji}</span>\n                    <span>{moodItem.name}</span>\n                  </button>\n                ))}\n              </div>\n              <button\n                onClick={handleCustomMood}\n                className=\"w-full p-2 text-sm text-blue-600 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors duration-200 flex items-center justify-center gap-2\"\n              >\n                <span>➕</span> 직접 기분 입력하기\n              </button>\n              \n              {showCustomMoodInput && (\n                <div className=\"mt-4\">\n                  <input\n                    type=\"text\"\n                    value={customMood}\n                    onChange={(e) => setCustomMood(e.target.value)}\n                    placeholder=\"기분을 입력하세요...\"\n                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Diary and Feedback Section */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Date Display */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">\n                {new Date(selectedDate).toLocaleDateString('ko-KR', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </h2>\n              {diaryEntries[selectedDate] && (\n                <div className=\"text-sm text-gray-600\">\n                  기분: <span className=\"font-medium text-blue-600\">{diaryEntries[selectedDate].mood}</span>\n                </div>\n              )}\n            </div>\n\n            {/* Diary Entry */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">✏️ 오늘의 일기</h2>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <textarea\n                  value={diaryEntry}\n                  onChange={(e) => setDiaryEntry(e.target.value)}\n                  placeholder={`Today was a great day. \nI went to the park with my friends. \nWe had a wonderful time together.`}\n                  className=\"w-full h-64 p-4 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-700 placeholder-gray-400 font-medium\"\n                  style={{ fontFamily: 'Georgia, Cambria, \"Times New Roman\", Times, serif' }}\n                />\n                <div className=\"text-sm text-gray-500\">\n                  일기를 쓸 때 다음을 참고해보세요: 오늘의 기분, 했던 일, 만난 사람, 느낀 점, \n                  내일의 계획 등에 대해 자유롭게 영어로 작성해보세요. 완벽한 문장을 쓰려고 \n                  애쓰기보다는 자유롭게 표현하는 데 집중해보세요!\n                </div>\n                <div className=\"flex justify-end\">\n                  <button\n                    type=\"submit\"\n                    className=\"px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors duration-200 font-medium flex items-center gap-2\"\n                  >\n                    <span>✅</span> 저장하고 피드백 받기\n                  </button>\n                </div>\n              </form>\n            </div>\n\n            {/* AI Feedback */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">🤖 AI 선생님의 피드백</h2>\n              {feedback.length > 0 ? (\n                <div className=\"space-y-6\">\n                  {feedback.map((item, index) => (\n                    <div key={index} className=\"border-l-4 border-blue-400 pl-4 py-3 bg-blue-50 rounded-r-lg\">\n                      <div className=\"mb-3\">\n                        <span className=\"inline-block bg-blue-100 text-blue-800 text-xs font-semibold px-2 py-1 rounded mb-2\">\n                          💬 피드백 #{index + 1}\n                        </span>\n                        <div>\n                          <span className=\"font-medium text-gray-700\">📝 원문:</span>\n                          <p className=\"text-gray-800 mt-1 bg-white p-2 rounded border\">{item.original}</p>\n                        </div>\n                      </div>\n                      <div className=\"mb-3\">\n                        <span className=\"font-medium text-gray-700\">✨ 개선 제안:</span>\n                        <p className=\"text-green-800 mt-1 bg-white p-2 rounded border font-medium\">{item.suggestion}</p>\n                      </div>\n                      <div>\n                        <span className=\"font-medium text-gray-700\">📘 상세 설명:</span>\n                        <p className=\"text-gray-700 mt-1 text-sm leading-relaxed bg-white p-3 rounded border border-gray-200\">\n                          {item.reason}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-gray-500 italic text-center py-8 bg-gray-50 rounded-lg\">\n                  <div className=\"text-4xl mb-2\">👋</div>\n                  일기를 작성하고 \"저장하고 피드백 받기\" 버튼을 클릭하면,<br />\n                  친절한 AI 선생님이 문장별로 상세한 피드백을 제공해드려요!\n                </div>\n              )}\n            </div>\n\n            {/* Learning Summary */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">🌟 오늘의 학습 정리</h2>\n              <p className=\"text-gray-600 mb-4 text-sm\">\n                오늘 일기 작성과 피드백을 통해 배운 내용을 간단히 정리해보세요. 이는 당신의 학습 여정을 되돌아보는 데 큰 도움이 됩니다.\n              </p>\n              <textarea\n                value={learningSummary}\n                onChange={handleLearningSummaryChange}\n                placeholder=\"예: 오늘은 과거형 동사 사용법과 문장을 자연스럽게 연결하는 방법을 배웠어요. 특히 'and'로 문장을 시작하는 것을 피하고, 대신 마침표나 접속사를 사용하는 것이 더 자연스럽다는 것을 알게 되었어요.\"\n                className=\"w-full h-32 p-4 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-700 placeholder-gray-400\"\n              />\n              <p className=\"text-xs text-gray-500 mt-2\">\n                💡 팁: 구체적인 예시와 함께 정리하면 기억에 더 오래 남아요!\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Instructions */}\n        <div className=\"mt-8 bg-white rounded-xl shadow-lg p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-3\">✨ 사용 팁:</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <h4 className=\"font-semibold text-blue-600 mb-2\">✓ 기분 선택:</h4>\n              <ul className=\"list-disc list-inside text-gray-600 space-y-1\">\n                <li>각 감정 옆에 해당하는 이모지가 있어요</li>\n                <li>기분이 정확히 맞지 않으면 직접 입력할 수 있어요</li>\n                <li>달력에서 초록색 점은 일기를 쓴 날짜를 의미해요</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold text-blue-600 mb-2\">✓ 일기 작성:</h4>\n              <ul className=\"list-disc list-inside text-gray-600 space-y-1\">\n                <li>한글과 영어를 섞어 써도 괜찮아요 (피드백에서 자동으로 수정해드려요)</li>\n                <li>문법 오류가 있어도 괜찮아요 (배우는 과정이니까요!)</li>\n                <li>학습 정리를 꼭 작성해보세요 (기억에 오래 남아요)</li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"mt-4 p-4 bg-green-50 rounded-lg\">\n            <p className=\"text-sm text-green-800\">\n              <strong>💡 학습 조언:</strong> 매일 조금씩이라도 꾸준히 작성하는 것이 가장 중요해요. \n              오늘 배운 내용을 내일 일기에 적용해보는 것도 좋은 방법이에요!\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}