version: '3.8'

services:
  # MongoDB 데이터베이스
  mongodb:
    image: mongo:6.0
    container_name: english-diary-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: english-diary
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - english-diary-network

  # 백엔드 서버
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: english-diary-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/english-diary?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - english-diary-network

  # 프론트엔드 (개발용)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: english-diary-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - english-diary-network

  # Nginx (프로덕션용)
  nginx:
    image: nginx:alpine
    container_name: english-diary-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - english-diary-network

volumes:
  mongodb_data:

networks:
  english-diary-network:
    driver: bridge
